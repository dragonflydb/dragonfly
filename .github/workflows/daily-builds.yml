name: daily-builds

on:
  schedule:
    - cron: '0 6 * * *' # run at 6 AM UTC
  workflow_dispatch:

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    name: Build ${{ matrix.name }}
    strategy:
      matrix:
        include:
          # Build with these flags
          - name: generic
            container: alpine-dev
            flags: "-DMARCH_OPT=-march=x86-64"
          - name: fedora
            container: fedora:30

    timeout-minutes: 45

    container:
      image: ghcr.io/romange/${{ matrix.container }}
      options: --security-opt seccomp=unconfined
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true

      - name: Install dependencies
        run: |
          cmake --version
          mkdir -p $GITHUB_WORKSPACE/build
      - name: Install packages
        if: matrix.container == 'fedora:30'
        run: |
          echo Passed

      - name: Configure & Build
        run: |
          cd $GITHUB_WORKSPACE/build
          cmake .. -DCMAKE_BUILD_TYPE=Debug -GNinja ${{ matrix.flags }}
          ninja src/all
      - name: Test
        run: |
            cd $GITHUB_WORKSPACE/build
            ctest -V -L DFLY

      - name: Send notification on failure
        if: failure() && github.ref == 'refs/heads/main'
        run: |
          job_link="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          message="Daily build (${{ matrix.name }}) failed.\\n Commit: ${{github.sha}}\\n Job Link: ${job_link}\\n"

          curl -s \
            -X POST \
            -H 'Content-Type: application/json' \
            '${{ secrets.GSPACES_BOT_DF_BUILD }}' \
            -d '{"text": "'"${message}"'"}'

  build-macos:
    runs-on: macos-15
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true

      - name: Install dependencies
        run: |

          # Remove Python3 symlinks in /usr/local/bin as workaround to brew update issues
          # https://github.com/actions/setup-python/issues/577
          rm /usr/local/bin/2to3* || :
          rm /usr/local/bin/idle3* || :
          rm /usr/local/bin/pydoc* || :
          rm /usr/local/bin/python3* || :
          brew update && brew install ninja boost automake zstd bison autoconf libtool

          mkdir -p $GITHUB_WORKSPACE/build

      - name: Configure & Build
        run: |
          cd $GITHUB_WORKSPACE/build

          export PATH=/opt/homebrew/bin:$PATH
          export PATH=/opt/homebrew/opt/bison/bin/:$PATH

          which bison
          bison --version

          # Check system clang version
          clang --version
          clang++ --version

          # Verify current macOS SDK
          xcrun --show-sdk-path

          autoconf --help
          autoreconf --help

          echo "*************************** START BUILDING **************************************"
          # Configure for using current macOS SDK
          export SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
          echo "Using SDK: $SDKROOT"

          # Use system clang/clang++ with macOS SDK
          cmake .. -DCMAKE_BUILD_TYPE=Debug -GNinja \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_OSX_SYSROOT="$SDKROOT" \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=15.0

          ninja src/all

      - name: Test
        run: |
            cd $GITHUB_WORKSPACE/build
            ctest -V -L DFLY

      - name: Send notification on failure
        if: failure() && github.ref == 'refs/heads/main'
        run: |
          job_link="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          message="Daily build (macOS) failed.\\n Commit: ${{github.sha}}\\n Job Link: ${job_link}\\n"

          curl -s \
            -X POST \
            -H 'Content-Type: application/json' \
            '${{ secrets.GSPACES_BOT_DF_BUILD }}' \
            -d '{"text": "'"${message}"'"}'
