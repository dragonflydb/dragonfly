# These tests are disabled until Dragonfly works well with BullMQ.
name: bullmq-tests
on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build

    timeout-minutes: 60
    #container:
    #  image: ghcr.io/romange/alpine-dev:latest
    #  options: --security-opt seccomp=unconfined
    #  credentials:
    #    username: ${{ github.repository_owner }}
    #    password: ${{ secrets.GITHUB_TOKEN }}
    env:
      node-version: lts/*

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          node-version: lts/*
          cache: 'yarn'
      - name: Install NodeJs
#          wget https://unofficial-builds.nodejs.org/download/release/v22.12.0/node-v22.12.0-linux-x64-musl.tar.xz
#          tar -xf node-v22.12.0-linux-x64-musl.tar.xz
#          cp -r node-v22.12.0-linux-x64-musl/* /usr/local/
#          apk add --no-cache yarn jq
        run: |
          node --version
          npm --version
          yarn --version
          mkdir -p $GITHUB_WORKSPACE/build
      - name: Configure/Build
        run: |
          cd $GITHUB_WORKSPACE/build
          #cmake .. -DCMAKE_BUILD_TYPE=Release -GNinja
          #ninja dragonfly
          wget https://github.com/dragonflydb/dragonfly/releases/download/v1.24.0/dragonfly-x86_64.tar.gz
          tar -zxvf dragonfly-x86_64.tar.gz
          mv dragonfly-x86_64 dragonfly
          ./dragonfly --alsologtostderr --cluster_mode=emulated --lock_on_hashtags --dbfilename= &
      - name: Build and Test BullMQ
        run: |
          mkdir -p $GITHUB_WORKSPACE/../bullmq
          cd $GITHUB_WORKSPACE/../bullmq
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/taskforcesh/bullmq/releases/latest | jq -r '.tarball_url')
          echo "Downloading latest BullMQ release from ${DOWNLOAD_URL}"
          #wget -O bullmq.tar.gz ${DOWNLOAD_URL}
          #tar -zxvf bullmq.tar.gz
          #mv taskforcesh-bullmq-* bullmq
          git clone https://github.com/taskforcesh/bullmq
          cd bullmq
          pwd
          patch -p1 -f < $GITHUB_WORKSPACE/bullmq.patch
          yarn install
          yarn build
          BULLMQ_TEST_PREFIX={b} yarn test
      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: unit_logs
          path: /tmp/dragonfly.*
