name: Repeat Tests

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch on which tests will be repeated"
        type: string
        required: true
      count:
        description: "The number of times the tests will be repeated"
        type: number
        required: false
        default: 1
      expression:
        description: "A pytest expression which will filter the tests"
        required: true
        type: string
      timeout:
        description: "Overall timeout for all test runs"
        required: false
        type: string
        default: "60m"
      epoll:
        description: "Force epoll mode in test"
        required: false
        type: string
        default: "no"
      use_release:
        description: "Use latest release instead of building dragonfly"
        required: false
        type: string
        default: "no"

jobs:
  build:
    strategy:
      matrix:
        container: ["ubuntu-dev:20"]
        proactor: [Uring]
        build-type: [Debug]
        runner: [ubuntu-latest]

    runs-on: ${{ matrix.runner }}

    container:
      image: ghcr.io/romange/${{ matrix.container }}
      options: --security-opt seccomp=unconfined --sysctl "net.ipv6.conf.all.disable_ipv6=0"
      volumes:
        - /var/crash:/var/crash

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          ref: ${{ inputs.branch }}

      - name: Print environment info
        run: |
          cat /proc/cpuinfo
          ulimit -a
          env

      - name: Configure & Build
        shell: bash
        run: |
          if [[ "${{ inputs.use_release }}" == "yes" ]]; then
            mkdir "${GITHUB_WORKSPACE}"/build
            cd "${GITHUB_WORKSPACE}"/build
            wget -q https://github.com/dragonflydb/dragonfly/releases/latest/download/dragonfly-x86_64.tar.gz
            tar xf dragonfly-x86_64.tar.gz
            mv dragonfly-x86_64 dragonfly
            ls -l
          else
            # -no-pie to disable address randomization so we could symbolize stacktraces
            cmake -B ${GITHUB_WORKSPACE}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}} -GNinja \
                  -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DPRINT_STACKTRACES_ON_SIGNAL=ON \
                  -DCMAKE_CXX_FLAGS=-no-pie -DHELIO_STACK_CHECK:STRING=4096
            cd ${GITHUB_WORKSPACE}/build  && ninja dragonfly
            pwd
            ls -l ..
          fi

      - name: Run tests on repeat
        uses: ./.github/actions/repeat
        with:
          run-only-on-ubuntu-latest: true
          dfly-executable: dragonfly
          build-folder-name: build
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_S3_ACCESS_SECRET }}
          s3-bucket: ${{ secrets.S3_REGTEST_BUCKET }}
          expression: ${{ inputs.expression }}
          count: ${{ inputs.count }}
          timeout: ${{ inputs.timeout }}
          epoll: ${{ inputs.epoll }}

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: /tmp/failed/*

      - name: Copy binary on a self hosted runner
        if: failure()
        run: |
          # We must use sh syntax.
          if [ "$RUNNER_ENVIRONMENT" = "self-hosted" ]; then
            cd ${GITHUB_WORKSPACE}/build
            timestamp=$(date +%Y-%m-%d_%H:%M:%S)
            mv ./dragonfly /var/crash/dragonfy_${timestamp}
          fi
