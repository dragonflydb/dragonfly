---
# Source: dragonfly/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-dragonfly
  namespace: default
  labels:
    app.kubernetes.io/name: dragonfly
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "v1.26.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: dragonfly/templates/extra-manifests.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dfly-password
stringData:
  password: foobar
---
# Source: dragonfly/templates/extra-manifests.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
stringData:
  password: password
  username: username
type: Opaque
---
# Source: dragonfly/templates/extra-manifests.yaml
apiVersion: v1
data:
  configKey1: configValue1
  configKey2: configValue2
kind: ConfigMap
metadata:
  name: my-configmap
---
# Source: dragonfly/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-dragonfly
  namespace: default
  labels:
    app.kubernetes.io/name: dragonfly
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "v1.26.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: dragonfly
      protocol: TCP
      name: dragonfly
  selector:
    app.kubernetes.io/name: dragonfly
    app.kubernetes.io/instance: test
---
# Source: dragonfly/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-dragonfly
  namespace: default
  labels:
    app.kubernetes.io/name: dragonfly
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "v1.26.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dragonfly
      app.kubernetes.io/instance: test
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: dragonfly
        app.kubernetes.io/instance: test
    spec:
      serviceAccountName: test-dragonfly
      containers:
        - name: dragonfly
          image: "docker.dragonflydb.io/dragonflydb/dragonfly:v1.26.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: dragonfly
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - /usr/local/bin/healthcheck.sh
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - /usr/local/bin/healthcheck.sh
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          args:
            - "--alsologtostderr"
          resources:
            limits: {}
            requests: {}
          
          env:
            - name: DFLY_requirepass
              valueFrom:
                secretKeyRef:
                  name: dfly-password
                  key: password
            - name: ENV_VAR43
              value: value1
            - name: ENV_VAR323
              value: value2
          envFrom:
            - configMapRef:
                name: my-configmap
            - secretRef:
                name: my-secret
